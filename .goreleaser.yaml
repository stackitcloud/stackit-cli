version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: linux-builds
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    binary: "stackit"

  - id: windows-builds
    env:
      - CGO_ENABLED=0
    goos:
      - windows
    binary: "stackit"

  - id: macos-builds
    env:
      - CGO_ENABLED=0
      - BUNDLE_ID=cloud.stackit.cli
      - "APPLE_APPLICATION_IDENTITY=Developer ID Application: Schwarz IT KG"
    goos:
      - darwin
    binary: "stackit"
    goarch:
      - arm64
      - amd64
    hooks:
      post:
        # Signing
        - cmd: codesign -s "{{.Env.APPLE_APPLICATION_IDENTITY}}" -f -v --options=runtime "dist/macos-builds_{{.Target}}/{{.Name}}"
          output: true
        - cmd: codesign -vvv --deep --strict "dist/macos-builds_{{.Target}}/{{.Name}}"
          output: true
        - cmd: hdiutil create -volname "STACKIT-CLI" -srcfolder "dist/macos-builds_{{.Target}}/{{.Name}}" -ov -format UDZO "dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.dmg"
          output: true
        - cmd: codesign -s "{{.Env.APPLE_APPLICATION_IDENTITY}}" -f -v --options=runtime "dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.dmg"
          output: true
        - cmd: xcrun notarytool submit --keychain-profile "stackit-cli" --wait --progress dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.dmg
          output: true
        - cmd: xcrun stapler staple "dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.dmg"
          output: true
        - cmd: spctl -a -t open --context context:primary-signature -v dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.dmg
          output: true
        # Completion files
        - cmd: mkdir -p dist/macos-builds_{{.Target}}/completions
        - cmd: sh -c './dist/macos-builds_{{.Target}}/{{.Name}} completion zsh > ./dist/macos-builds_{{.Target}}/completions/stackit.zsh'
        - cmd: sh -c './dist/macos-builds_{{.Target}}/{{.Name}} completion bash > ./dist/macos-builds_{{.Target}}/completions/stackit.bash'
        - cmd: sh -c './dist/macos-builds_{{.Target}}/{{.Name}} completion fish > ./dist/macos-builds_{{.Target}}/completions/stackit.fish'

archives:
  - ids:
      - linux-builds
      - windows-builds
    formats: [ 'tar.gz' ]
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
  - id: macos-archives
    ids:
      - macos-builds
    formats: [ 'tar.gz' ]
    files:
      - src: ./dist/macos-builds_{{.Target}}/completions/*
        dst: completions
      - LICENSE.md
      - README.md

release:
  # If set to auto, the GitHub release will be marked as "Pre-release"
  # if the tag has a prerelease indicator (e.g. v0.0.1-alpha1)
  prerelease: auto

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

nfpms:
  - id: linux-packages
    # IDs of the builds for which to create packages for
    ids:
      - linux-builds
    package_name: stackit
    vendor: STACKIT
    homepage: https://github.com/stackitcloud/stackit-cli
    maintainer: STACKIT Developer Tools Team <developer-tools@stackit.cloud>
    description: A command-line interface to manage STACKIT resources.
    license: Apache 2.0
    contents:
      - src: LICENSE.md
        dst: LICENSE.md
    formats:
      - deb
      - rpm

signs:
  - artifacts: package
    args:
      [
        "-u",
        "{{ .Env.GPG_FINGERPRINT }}",
        "--output",
        "${signature}",
        "--detach-sign",
        "${artifact}",
      ]

homebrew_casks:
  - name: stackit
    directory: Casks
    conflicts:
      - formula: stackit
    repository:
      owner: stackitcloud
      name: homebrew-tap
    commit_author:
      name: CLI Release Bot
      email: noreply@stackit.de
    homepage: "https://github.com/stackitcloud/stackit-cli"
    description: "A command-line interface to manage STACKIT resources.\nThis CLI is in a beta state. More services and functionality will be supported soon."
    license: "Apache-2.0"
    # If set to auto, the release will not be uploaded to the homebrew tap repo
    # if the tag has a prerelease indicator (e.g. v0.0.1-alpha1)
    skip_upload: auto
    completions:
      zsh: ./completions/stackit.zsh
      bash: ./completions/stackit.bash
      fish: ./completions/stackit.fish

snapcrafts:
  # IDs of the builds for which to create packages for
  - ids:
      - linux-builds
    # The name of the snap
    name: stackit
    # The canonical title of the application, displayed in the software
    # centre graphical frontends
    title: STACKIT CLI
    summary: A command-line interface to manage STACKIT resources.
    description: "A command-line interface to manage STACKIT resources.\nThis CLI is in a beta state. More services and functionality will be supported soon."
    license: Apache-2.0
    confinement: classic
    # Grade "devel" will only release to `edge` and `beta` channels
    # Grade "stable" will also release to the `candidate` and `stable` channels
    grade: devel
    # Whether to publish the Snap to the store
    publish: true

winget:
  - name: stackit
    publisher: stackitcloud
    short_description: A command-line interface to manage STACKIT resources.
    license: Apache-2.0
    publisher_support_url: "https://github.com/stackitcloud/stackit-cli/issues"
    package_identifier: stackitcloud.stackit
    homepage: "https://github.com/stackitcloud/stackit-cli"
    # If set to auto, the release will not be uploaded to the homebrew tap repo
    # if the tag has a prerelease indicator (e.g. v0.0.1-alpha1)
    # Temporarily not skipping prereleases to test integration with Winget
    # skip_upload: auto
    repository:
      owner: stackitcloud
      name: winget-pkgs
      pull_request:
        enabled: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master
