name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CODE_COVERAGE_FILE_NAME: "coverage.out" # must be the same as in Makefile
  CODE_COVERAGE_ARTIFACT_NAME: "code-coverage"

jobs:
  main:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Install go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: "Ensure docs are up-to-date"
        if: ${{ github.event_name == 'pull_request' }}
        run: ./scripts/check-docs.sh
      
      - name: Lint
        run: make lint
      
      - name: Test
        run: make test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CODE_COVERAGE_ARTIFACT_NAME }}
          path: ${{ env.CODE_COVERAGE_FILE_NAME }}

  config:
    name: Check GoReleaser config
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' # Do not run when workflow is triggered by push to main branch
    runs-on: ubuntu-latest
    needs: main
    permissions:
      contents: read
      actions: read  # to download code coverage results from "main" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - name: Check new code coverage
        uses: fgrosse/go-coverage-report@v1.2.0
        continue-on-error: true  # Add this line to prevent pipeline failures in forks
        with:
          coverage-artifact-name: ${{ env.CODE_COVERAGE_ARTIFACT_NAME }}
          coverage-file-name: ${{ env.CODE_COVERAGE_FILE_NAME }}
